data1 = read.table(file = "r1.txt", header = TRUE)
data2 = read.table(file = "r2.txt", header = TRUE)
data3 = read.table(file = "r3.txt", header = TRUE)
data4 = read.table(file = "r4.txt", header = TRUE)
setwd("~/CHPS/EDP/TDs_EDP/TD4/Visualisation/Question2")
data1 = read.table(file = "r1.txt", header = TRUE)
data2 = read.table(file = "r2.txt", header = TRUE)
data3 = read.table(file = "r3.txt", header = TRUE)
data4 = read.table(file = "r4.txt", header = TRUE)
data5 = read.table(file = "r5.txt", header = TRUE)
noms_variables = c( "dec. 16, 2016",
"interval",
"i/o rate",
"MB/sec",
"bytes i/o",
"read pct",
"resp time",
"read resp",
"write resp",
"resp max",
"resp stddev",
"queue depth",
"cpu%sys+u",
"cpu%sys")
View(data1)
names(data1) = noms_variables
names(data2) = noms_variables
names(data3) = noms_variables
names(data4) = noms_variables
names(data5) = noms_variables
View(data1)
data1[,"internal"]
data1[,"interval"]
data1[,"MB/sec"]
View(data1)
mean1 = mean (data1[,"resp time"])
mean1 = mean (data1[1:30,"resp time"])
data1[1:30,"resp time"]
data1[1:3,"resp time"]
data1[1,"resp time"]
data1[,"resp time"]
mean1 = mean (data1[,"resp time"])
mean1 = mean (as.matrix(data1[,"resp time"]))
mean1 = mean (as.data.frame(data1[,"resp time"]))
mean1 = mean (numeric(data1[,"resp time"]))
as.matrix(data1[,"resp time"])
mean (as.matrix(data1[,"resp time"]))
seq (1:10)
as.matrix(seq (1:10))
as.matrix(data1[,"resp time"])
as.numeric(as.matrix(data1[,"resp time"]))
as.character(data1[,"resp time"])
as.numeric(as.character(data1[,"resp time"]))
data1[1,"resp time"] + data1[2, "resp time"]
as.numeric(as.character(data1[1,"resp time"]) * 2
)
as.numeric(as.character(data1[1,"resp time"])) * 2
as.character(data1[1,"resp time"])
as.character(data1[1,"resp time"]) + as.character(data1[1,"resp time"])
as.numeric(as.character(data1[1,"resp time"]))
data1 = read.table(file = "r1.txt", header = TRUE)
data2 = read.table(file = "r2.txt", header = TRUE)
data3 = read.table(file = "r3.txt", header = TRUE)
data4 = read.table(file = "r4.txt", header = TRUE)
data5 = read.table(file = "r5.txt", header = TRUE)
noms_variables = c( "dec. 16, 2016",
"interval",
"i/o rate",
"MB/sec",
"bytes i/o",
"read pct",
"resp time",
"read resp",
"write resp",
"resp max",
"resp stddev",
"queue depth",
"cpu%sys+u",
"cpu%sys")
names(data1) = noms_variables
names(data2) = noms_variables
names(data3) = noms_variables
names(data4) = noms_variables
names(data5) = noms_variables
mean1 = mean (data1[,"resp time"])
mean1
source('~/CHPS/EDP/TDs_EDP/TD4/Visualisation/Question2/question_1_script.R')
source('~/CHPS/EDP/TDs_EDP/TD4/Visualisation/Question2/question_1_script.R')
data1 = as.matrix(read.table(file = "r1.txt", header = TRUE))
data2 = as.matrix(read.table(file = "r2.txt", header = TRUE))
data3 = as.matrix(read.table(file = "r3.txt", header = TRUE))
data4 = as.matrix(read.table(file = "r4.txt", header = TRUE))
data5 = as.matrix(read.table(file = "r5.txt", header = TRUE))
noms_variables = c( "dec. 16, 2016",
"interval",
"i/o rate",
"MB/sec",
"bytes i/o",
"read pct",
"resp time",
"read resp",
"write resp",
"resp max",
"resp stddev",
"queue depth",
"cpu%sys+u",
"cpu%sys")
names(data1) = noms_variables
names(data2) = noms_variables
names(data3) = noms_variables
names(data4) = noms_variables
names(data5) = noms_variables
mean1 = mean (data1[,"resp time"])
mean2 = mean (data2[,"resp time"])
mean3 = mean (data3[,"resp time"])
mean4 = mean (data4[,"resp time"])
mean5 = mean (data5[,"resp time"])
source('~/CHPS/EDP/TDs_EDP/TD4/Visualisation/Question2/question_1_script.R')
source('~/CHPS/EDP/TDs_EDP/TD4/Visualisation/Question2/question_1_script.R')
moyennes
View(data3)
source('~/CHPS/EDP/TDs_EDP/TD4/Visualisation/Question2/question_1_script.R')
source('~/CHPS/EDP/TDs_EDP/TD4/Visualisation/Question2/question_1_script.R')
source('~/CHPS/EDP/TDs_EDP/TD4/Visualisation/Question2/question_1_script.R')
library(prettyR)
require(prettyR)
install.packages("prettyR")
library(prettyR)
ls
describe (r1)
help ("confint")
hist(moyennes)
moyennes
moyennes = c( mean (r1), mean (r2), mean (r3), mean (r4), mean (r5))
names(moyennes) = c("Moyenne tps reponse r1", "Moyenne tps reponse r2", "Moyenne tps reponse r3"
,"Moyenne tps reponse r4", "Moyenne tps reponse r5")
moyennes[,2] = seq (1:5)
hist(moyennes, seq(1:5))
plot(moyennes, seq(1:5))
plot(seq(1:5),moyennes)
hist(seq(1:5),moyennes)
hist(seq(1:5),moyennes)
plot(seq(1:5),moyennes)
plot(seq(1:5),moyennes, b)
plot(seq(1:5),moyennes, type = b)
plot(seq(1:5),moyennes, ... = b)
plot(seq(1:5),moyennes, type = "b")
plot(seq(1:5),moyennes, type = "h")
plot(seq(1:5),moyennes, type = "s")
moyennes
plot(seq(1:5),moyennes, type = "S")
plot(seq(1:5),moyennes, type = "H")
plot(seq(1:5),moyennes, type = "h")
sink(file = "moyennes.txt")
print(moyennes)
sink()
moyennes = c( mean (r1), mean (r2), mean (r3), mean (r4), mean (r5))
sink(file = "moyennes.txt")
print(moyennes)
sink()
for(i in seq 1:length(moyennes)){
cat (moyennes[i])
cat ("\n")
}
for(i in seq 1:length(moyennes)){
cat (moyennes[i])
cat ("\n")
}
for(i in 1:length(moyennes)){
cat (moyennes[i])
cat ("\n")
}
sink(file = "moyennes.txt")
for(i in 1:length(moyennes)){
cat (moyennes[i])
cat ("\n")
}
sink()
for(i in 1:length(moyennes)){
cat (moyennes[i])
cat ("\n")
}
sink(file = "moyennes.txt")
for(i in 1:length(moyennes)){
cat (moyennes[i])
cat ("\n")
}
sink()
cat (i + " ")
for(i in 1:length(moyennes)){
cat (i + " ")
cat (moyennes[i])
cat ("\n")
}
for(i in 1:length(moyennes)){
cat (i" ")
cat (moyennes[i])
cat ("\n")
}
for(i in 1:length(moyennes)){
cat (moyennes[i])
cat ("\n")
}
for(i in 1:length(moyennes)){
cat(i)
cat(" ")
cat (moyennes[i])
cat ("\n")
}
sink(file = "moyennes.txt")
for(i in 1:length(moyennes)){
cat(i)
cat(" ")
cat (moyennes[i])
cat ("\n")
}
sink()
source('~/CHPS/EDP/TDs_EDP/TD4/Visualisation/Question2/question_1_script.R')
for(i in 1:length(moyennes)){
cat(i)
cat(" ")
cat (moyennes[i])
cat ("\n")
}
sink(file = "moyennes.txt")
for(i in 1:length(moyennes)){
cat(i)
cat(" ")
cat (moyennes[i])
cat ("\n")
}
sink()
source('~/CHPS/EDP/TDs_EDP/TD4/Visualisation/Question2/question_1_script.R')
ic1 = moyennes[1] + 1.96 * (sd(r1)/sqrt(length(r1)))
ic1 = c(moyennes[1] - 1.96 * (sd(r1)/sqrt(length(r1))), moyennes[1] + 1.96 * (sd(r1)/sqrt(length(r1))))
print(moyennes)
ic1
execution = c(r1, r2, r3, r4, r5)
source('~/CHPS/EDP/TDs_EDP/TD4/Visualisation/Question2/question_1_script.R')
source('~/CHPS/EDP/TDs_EDP/TD4/Visualisation/Question2/question_1_script.R')
source('~/CHPS/EDP/TDs_EDP/TD4/Visualisation/Question2/question_1_script.R')
data1 = read.table(file = "r1.txt")
data2 = read.table(file = "r2.txt")
data3 = read.table(file = "r3.txt")
data4 = read.table(file = "r4.txt")
data5 = read.table(file = "r5.txt")
noms_variables = c( "dec. 16, 2016",
"interval",
"i/o rate",
"MB/sec",
"bytes i/o",
"read pct",
"resp time",
"read resp",
"write resp",
"resp max",
"resp stddev",
"queue depth",
"cpu%sys+u",
"cpu%sys")
names(data1) = noms_variables
names(data2) = noms_variables
names(data3) = noms_variables
names(data4) = noms_variables
names(data5) = noms_variables
tps_reponse_executions = c(as.matrix(data1[,"resp time"]),
as.matrix(data2[,"resp time"]),
as.matrix(data3[,"resp time"]),
as.matrix(data4[,"resp time"]),
as.matrix(data5[,"resp time"]))
debit_executions = c(as.matrix(data1[,"MB/sec"]),
as.matrix(data2[,"MB/sec"]),
as.matrix(data3[,"MB/sec"]),
as.matrix(data4[,"MB/sec"]),
as.matrix(data5[,"MB/sec"]))
for(i in 1:5){
moyennes[i] = mean (tps_reponse_executions[i])
}
moyennes = seq (1:5)
for(i in 1:5){
moyennes[i] = mean (tps_reponse_executions[i])
}
sink(file = "moyennes.txt")
for(i in 1:length(moyennes)){
cat(i)
cat(" ")
cat (moyennes[i])
cat ("\n")
}
sink()
plot(seq(1:5),moyennes, type = "h")
source('~/CHPS/EDP/TDs_EDP/TD4/Visualisation/Question2/question_1_script.R')
source('~/CHPS/EDP/TDs_EDP/TD4/Visualisation/Question2/question_1_script.R')
source('~/CHPS/EDP/TDs_EDP/TD4/Visualisation/Question2/question_1_script.R')
source('~/CHPS/EDP/TDs_EDP/TD4/Visualisation/Question2/question_1_script.R')
source('~/CHPS/EDP/TDs_EDP/TD4/Visualisation/Question2/question_1_script.R')
intervalles_confiances = NULL
intervalles_confiances
for(i in 1:5){
intervalles_confiances[i] = c(moyennes[1] - 1.96 * (sd(tps_reponse_executions[i])/sqrt(length(tps_reponse_executions[i]))),
moyennes[1] + 1.96 * (sd(tps_reponse_executions[i])/sqrt(length(tps_reponse_executions[i]))))
}
intervalles_confiances = c (seq(1:5), seq(1:5))
for(i in 1:5){
intervalles_confiances[i] = c(moyennes[1] - 1.96 * (sd(tps_reponse_executions[i])/sqrt(length(tps_reponse_executions[i]))),
moyennes[1] + 1.96 * (sd(tps_reponse_executions[i])/sqrt(length(tps_reponse_executions[i]))))
}
intervalles_confiances
intervalles_confiances = c (seq(1:5), seq(1:5))
intervalles_confiances
source('~/CHPS/EDP/TDs_EDP/TD4/Visualisation/Question2/question_1_script.R')
intervalles_confiances = matrix(nrow = 5, ncol = 2)
for(i in 1:5){
intervalles_confiances[i,1] = moyennes[1] - 1.96 * (sd(tps_reponse_executions[i])/sqrt(length(tps_reponse_executions[i])))
intervalles_confiances[i,2] = moyennes[1] + 1.96 * (sd(tps_reponse_executions[i])/sqrt(length(tps_reponse_executions[i])))
}
print(intervalles_confiances)
intervalles_confiances = matrix(nrow = 5, ncol = 2, dimnames = c("1","2"))
source('~/CHPS/EDP/TDs_EDP/TD4/Visualisation/Question2/question_1_script.R')
intervalles_confiances = matrix(nrow = 5, ncol = 2, dimnames = list("1","2"))
intervalles_confiances = matrix(nrow = 5, ncol = 2)
for(i in 1:5){
intervalles_confiances[i,1] = moyennes[1] - 1.96 * (sd(tps_reponse_executions[i])/sqrt(length(tps_reponse_executions[i])))
intervalles_confiances[i,2] = moyennes[1] + 1.96 * (sd(tps_reponse_executions[i])/sqrt(length(tps_reponse_executions[i])))
}
intervalles_confiances = matrix(data = 0, nrow = 5, ncol = 2)
for(i in 1:5){
intervalles_confiances[i,1] = moyennes[1] - 1.96 * (sd(tps_reponse_executions[i])/sqrt(length(tps_reponse_executions[i])))
intervalles_confiances[i,2] = moyennes[1] + 1.96 * (sd(tps_reponse_executions[i])/sqrt(length(tps_reponse_executions[i])))
}
print(intervalles_confiances)
intervalles_confiances = matrix(data = 0, nrow = 5, ncol = 2)
print(intervalles_confiances)
intervalles_confiances[i,1] = moyennes[1] - 1.96 * (sd(tps_reponse_executions[i])/sqrt(length(tps_reponse_executions[i])))
intervalles_confiances[i,2] = moyennes[1] + 1.96 * (sd(tps_reponse_executions[i])/sqrt(length(tps_reponse_executions[i])))
intervalles_confiances
intervalles_confiances = matrix(data = 0, nrow = 5, ncol = 2)
for(i in 1:5){
intervalles_confiances[i,1] = moyennes[i] - 1.96 * (sd(tps_reponse_executions[i])/sqrt(length(tps_reponse_executions[i])))
intervalles_confiances[i,2] = moyennes[i] + 1.96 * (sd(tps_reponse_executions[i])/sqrt(length(tps_reponse_executions[i])))
}
print(intervalles_confiances)
data1 = read.table(file = "r1.txt")
data2 = read.table(file = "r2.txt")
data3 = read.table(file = "r3.txt")
data4 = read.table(file = "r4.txt")
data5 = read.table(file = "r5.txt")
noms_variables = c( "dec. 16, 2016",
"interval",
"i/o rate",
"MB/sec",
"bytes i/o",
"read pct",
"resp time",
"read resp",
"write resp",
"resp max",
"resp stddev",
"queue depth",
"cpu%sys+u",
"cpu%sys")
names(data1) = noms_variables
names(data2) = noms_variables
names(data3) = noms_variables
names(data4) = noms_variables
names(data5) = noms_variables
View(data1)
View(data2)
View(data3)
View(data4)
View(data5)
tps_reponse_executions = c(as.matrix(data1[,"resp time"]),
as.matrix(data2[,"resp time"]),
as.matrix(data3[,"resp time"]),
as.matrix(data4[,"resp time"]),
as.matrix(data5[,"resp time"]))
tps_reponse_executions
tps_reponse_executions[1]
tps_reponse_executions = list(as.matrix(data1[,"resp time"]),
as.matrix(data2[,"resp time"]),
as.matrix(data3[,"resp time"]),
as.matrix(data4[,"resp time"]),
as.matrix(data5[,"resp time"]))
tps_reponse_executions[1]
tps_reponse_executions[2]
tps_reponse_executions = list(as.matrix(data1[,"resp time"]),
as.matrix(data2[,"resp time"]),
as.matrix(data3[,"resp time"]),
as.matrix(data4[,"resp time"]),
as.matrix(data5[,"resp time"]))
debit_executions = list(as.matrix(data1[,"MB/sec"]),
as.matrix(data2[,"MB/sec"]),
as.matrix(data3[,"MB/sec"]),
as.matrix(data4[,"MB/sec"]),
as.matrix(data5[,"MB/sec"]))
moyennes = seq (1:5)
for(i in 1:5){
moyennes[i] = mean (tps_reponse_executions[i])
}
for(i in 1:5){
moyennes[i] = mean (as.numeric(tps_reponse_executions[i]))
}
source('~/CHPS/EDP/TDs_EDP/TD4/Visualisation/Question2/question_1_script.R')
data1 = read.table(file = "r1.txt")
data2 = read.table(file = "r2.txt")
data1 = read.table(file = "r1.txt")
data2 = read.table(file = "r2.txt")
data3 = read.table(file = "r3.txt")
data4 = read.table(file = "r4.txt")
data5 = read.table(file = "r5.txt")
noms_variables = c( "dec. 16, 2016",
"interval",
"i/o rate",
"MB/sec",
"bytes i/o",
"read pct",
"resp time",
"read resp",
"write resp",
"resp max",
"resp stddev",
"queue depth",
"cpu%sys+u",
"cpu%sys")
names(data1) = noms_variables
names(data2) = noms_variables
names(data3) = noms_variables
names(data4) = noms_variables
names(data5) = noms_variables
tps_reponse_executions = list(as.matrix(data1[,"resp time"]),
as.matrix(data2[,"resp time"]),
as.matrix(data3[,"resp time"]),
as.matrix(data4[,"resp time"]),
as.matrix(data5[,"resp time"]))
debit_executions = intervalles_confiances[i,1] = (as.matrix(data1[,"MB/sec"]),
as.matrix(data2[,"MB/sec"]),
as.matrix(data3[,"MB/sec"]),
as.matrix(data4[,"MB/sec"]),
as.matrix(data5[,"MB/sec"]))
int_conf1 = c(moyennes[1] - 1.96 * (sd(tps_reponse_executions[1])/sqrt(length(tps_reponse_executions[1]))),
moyennes[1] + 1.96 * (sd(tps_reponse_executions[1])/sqrt(length(tps_reponse_executions[1]))),)
source('~/CHPS/EDP/TDs_EDP/TD4/Visualisation/Question2/question_1_script.R')
source('~/CHPS/EDP/TDs_EDP/TD4/Visualisation/Question2/question_1_script.R')
print(int_conf1)
source('~/CHPS/EDP/TDs_EDP/TD4/Visualisation/Question2/question_1_script.R')
source('~/CHPS/EDP/TDs_EDP/TD4/Visualisation/Question2/question_1_script.R')
data2 = read.table(file = "r2.txt")
data3 = read.table(file = "r3.txt")
data4 = read.table(file = "r4.txt")
data5 = read.table(file = "r5.txt")
noms_variables = c( "dec. 16, 2016",
"interval",
"i/o rate",
"MB/sec",
"bytes i/o",
"read pct",
"resp time",
"read resp",
"write resp",
"resp max",
"resp stddev",
"queue depth",
"cpu%sys+u",
"cpu%sys")
names(data1) = noms_variables
names(data2) = noms_variables
names(data3) = noms_variables
names(data4) = noms_variables
names(data5) = noms_variables
tps_reponse_executions = matrix(as.matrix(data1[,"resp time"]),
as.matrix(data2[,"resp time"]),
as.matrix(data3[,"resp time"]),
as.matrix(data4[,"resp time"]),
as.matrix(data5[,"resp time"]))
data1 = read.table(file = "r1.txt")
data2 = read.table(file = "r2.txt")
data3 = read.table(file = "r3.txt")
data4 = read.table(file = "r4.txt")
data5 = read.table(file = "r5.txt")
noms_variables = c( "dec. 16, 2016",
"interval",
"i/o rate",
"MB/sec",
"bytes i/o",
"read pct",
"resp time",
"read resp",
"write resp",
"resp max",
"resp stddev",
"queue depth",
"cpu%sys+u",
"cpu%sys")
names(data1) = noms_variables
names(data2) = noms_variables
names(data3) = noms_variables
names(data4) = noms_variables
names(data5) = noms_variables
tps_reponse_executions = matrix(as.matrix(data1[,"resp time"]),
as.matrix(data2[,"resp time"]),
as.matrix(data3[,"resp time"]),
as.matrix(data4[,"resp time"]),
as.matrix(data5[,"resp time"]))
debit_executions = intervalles_confiances[i,1] = list(as.matrix(data1[,"MB/sec"]),
as.matrix(data2[,"MB/sec"]),
as.matrix(data3[,"MB/sec"]),
as.matrix(data4[,"MB/sec"]),
as.matrix(data5[,"MB/sec"]))
moyennes = seq (1:5)
