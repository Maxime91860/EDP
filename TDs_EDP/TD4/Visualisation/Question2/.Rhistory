data1 = read.table(file = "r1.txt")
data2 = read.table(file = "r2.txt")
data3 = read.table(file = "r3.txt")
data4 = read.table(file = "r4.txt")
data5 = read.table(file = "r5.txt")
noms_variables = c( "dec. 16, 2016",
"interval",
"i/o rate",
"MB/sec",
"bytes i/o",
"read pct",
"resp time",
"read resp",
"write resp",
"resp max",
"resp stddev",
"queue depth",
"cpu%sys+u",
"cpu%sys")
names(data1) = noms_variables
names(data2) = noms_variables
names(data3) = noms_variables
names(data4) = noms_variables
source('~/CHPS/EDP/TDs_EDP/TD4/Visualisation/Question2/question_1_script.R')
setwd("~/CHPS/EDP/TDs_EDP/TD4/Visualisation/Question2")
source('~/CHPS/EDP/TDs_EDP/TD4/Visualisation/Question2/question_1_script.R')
debit_executions = intervalles_confiances[i,1] = list(as.matrix(data1[,"MB/sec"]),
as.matrix(data2[,"MB/sec"]),
as.matrix(data3[,"MB/sec"]),
as.matrix(data4[,"MB/sec"]),
as.matrix(data5[,"MB/sec"]))
source('~/CHPS/EDP/TDs_EDP/TD4/Visualisation/Question2/question_1_script.R')
tps_reponse_executions = matrix(as.matrix(data1[,"resp time"]),
as.matrix(data2[,"resp time"]),
as.matrix(data3[,"resp time"]),
as.matrix(data4[,"resp time"]),
as.matrix(data5[,"resp time"]))
tps_reponse_executions = c(as.matrix(data1[,"resp time"]),
as.matrix(data2[,"resp time"]),
as.matrix(data3[,"resp time"]),
as.matrix(data4[,"resp time"]),
as.matrix(data5[,"resp time"]))
tps_reponse_executions
tps_reponse_executions[1]
tps_reponse_executions[2]
tps_reponse_executions[31]
tps_reponse_executions[62]
tps_reponse_executions[61]
tps_reponse_executions[32]
View(data2)
tps_reponse_executions[62]
mean (tps_reponse_executions[1])
for(i in 1:length(moyennes)){
cat(i)
cat(" ")
cat (moyennes[i])
cat ("\n")
}
moyennes = seq (1:5)
for(i in 1:5){
moyennes[i] = mean (tps_reponse_executions[i])
}
for(i in 1:length(moyennes)){
cat(i)
cat(" ")
cat (moyennes[i])
cat ("\n")
}
moyennes = seq (1:5)
for(i in 1:5){
somme = 0
for(j in ((i-1)*31):((i-1)*31)+31){
somme = somme + tps_reponse_executions[j]
}
moyennes[i] = somme/31
}
for(i in 1:length(moyennes)){
cat(i)
cat(" ")
cat (moyennes[i])
cat ("\n")
}
somme = 0
for(i in 1:5){
somme = 0
for(j in ((i-1)*31):((i-1)*31)+2){
somme = somme + tps_reponse_executions[j]
}
moyennes[i] = somme/31
}
for(i in 1:length(moyennes)){
cat(i)
cat(" ")
cat (moyennes[i])
cat ("\n")
}
0.02+39.403+3.256
0.02+39.403+3.256/31
(0.02+39.403+3.256)/31
somme = 0
for(i in 1:5){
somme = 0
for(j in ((i-1)*31):((i-1)*31)+2){
somme = somme + tps_reponse_executions[j]
cat(i, somme, sep=" ")
}
moyennes[i] = somme/31
}
somme = 0
for(i in 1:5){
somme = 0
for(j in ((i-1)*31):((i-1)*31)+2){
somme = somme + tps_reponse_executions[j]
cat(i, somme, sep="\n")
}
moyennes[i] = somme/31
}
for(i in 1:5){
somme = 0
for(j in ((i-1)*31):((i-1)*31)+2){
somme = somme + tps_reponse_executions[j]
cat(i, somme, sep="\r")
}
moyennes[i] = somme/31
}
for(i in 1:5){
somme = 0
for(j in ((i-1)*31):((i-1)*31)+2){
somme = somme + tps_reponse_executions[j]
cat(i, somme, sep="\t")
}
moyennes[i] = somme/31
}
for(i in 1:5){
somme = 0
for(j in ((i-1)*31):((i-1)*31)+2){
somme = somme + tps_reponse_executions[j]
cat(i, somme, sep="\n")
}
moyennes[i] = somme/31
}
for(i in 1:5){
somme = 0
for(j in ((i-1)*31):((i-1)*31)+31){
somme = somme + tps_reponse_executions[j]
cat(i, somme, sep=", ")
}
moyennes[i] = somme/31
}
tps_reponse_executions = list(as.matrix(data1[,"resp time"]),
as.matrix(data2[,"resp time"]),
as.matrix(data3[,"resp time"]),
as.matrix(data4[,"resp time"]),
as.matrix(data5[,"resp time"]))
tps_reponse_executions
tps_reponse_executions[1]
tps_reponse_executions[2]
tps_reponse_executions[3]
tps_reponse_executions[4]
tps_reponse_executions[5]
for(i in 1:5){
moyennes[i] = mean (tps_reponse_executions[i])
}
tps_reponse_executions[5]
tps_reponse_executions[[5]]
for(i in 1:5){
moyennes[i] = mean (tps_reponse_executions[[i]])
}
moyennes
for(i in 1:length(moyennes)){
cat (i, moyennes[i], file = "tps_resp_moyen", sep = " ")
cat ("\n")
}
for(i in 1:length(moyennes)){
cat (i, moyennes[i], file = "tps_resp_moyen.txt", sep = " ")
cat ("\n", file = "tps_resp_moyen.txt")
}
for(i in 1:length(moyennes)){
cat (i, moyennes[i], file = "tps_resp_moyen.txt", sep = " ", append=TRUE)
cat ("\n", file = "tps_resp_moyen.txt", append = TRUE)
}
for(i in 1:length(moyennes)){
cat (i, moyennes[i], file = "tps_resp_moyen.txt", sep = " ", append=TRUE)
cat ("\n", file = "tps_resp_moyen.txt", append = TRUE)
}
for(i in 1:5){
moyennes[i] = mean (tps_reponse_executions[i])
}
for(i in 1:5){
moyennes[i] = mean (tps_reponse_executions[[i]])
}
for(i in 1:5){
variances[i] = mean (tps_reponse_executions[i])
}
for(i in 1:5){
variances[i] = mean (tps_reponse_executions[[i]])
}
variances = seq (1:5)
for(i in 1:5){
variances[i] = var (tps_reponse_executions[[i]])
}
for(i in 1:5){
borne_inf = moyennes[i] - 1.96 * (sd(tps_reponse_executions[i])/sqrt(length(tps_reponse_executions[i])))
borne_sup = moyennes[i] + 1.96 * (sd(tps_reponse_executions[i])/sqrt(length(tps_reponse_executions[i])))
cat(borne_inf, borne_sup, sep = ",")
cat("\n")
}
for(i in 1:5){
borne_inf = moyennes[i] - 1.96 * (sd(tps_reponse_executions[[i]])/sqrt(length(tps_reponse_executions[[i]])))
borne_sup = moyennes[i] + 1.96 * (sd(tps_reponse_executions[[i]])/sqrt(length(tps_reponse_executions[[i]])))
cat(borne_inf, borne_sup, sep = ",")
cat("\n")
}
for(i in 1:5){
cat ("moyenne = ")
cat (moyennes[i])
cat ("ecart = ")
cat (1.96 * (sd(tps_reponse_executions[[i]])/sqrt(length(tps_reponse_executions[[i]]))))
cat ("\n")
borne_inf = moyennes[i] - 1.96 * (sd(tps_reponse_executions[[i]])/sqrt(length(tps_reponse_executions[[i]])))
borne_sup = moyennes[i] + 1.96 * (sd(tps_reponse_executions[[i]])/sqrt(length(tps_reponse_executions[[i]])))
cat("intervalle = ")
cat(borne_inf, borne_sup, sep = ",")
cat("\n")
}
for(i in 1:5){
cat ("moyenne = ")
cat (moyennes[i])
cat (", ecart = ")
cat (1.96 * (sd(tps_reponse_executions[[i]])/sqrt(length(tps_reponse_executions[[i]]))))
cat ("\n")
borne_inf = moyennes[i] - 1.96 * (sd(tps_reponse_executions[[i]])/sqrt(length(tps_reponse_executions[[i]])))
borne_sup = moyennes[i] + 1.96 * (sd(tps_reponse_executions[[i]])/sqrt(length(tps_reponse_executions[[i]])))
cat("intervalle = ")
cat(borne_inf, borne_sup, sep = ",")
cat("\n")
}
for(i in 1:5){
cat ("moyenne = ")
cat (moyennes[i])
cat (", ecart = ")
cat (1.96 * (sd(tps_reponse_executions[[i]])/sqrt(length(tps_reponse_executions[[i]]))))
cat ("\n")
borne_inf = moyennes[i] - 1.96 * (sd(tps_reponse_executions[[i]])/sqrt(length(tps_reponse_executions[[i]])))
borne_sup = moyennes[i] + 1.96 * (sd(tps_reponse_executions[[i]])/sqrt(length(tps_reponse_executions[[i]])))
cat("intervalle = ")
cat(borne_inf, borne_sup, sep = ",")
cat("\n")
}
125 - 242
125 + 242
library(prettyR)
describe(tps_reponse_executions[[1]])
describe(tps_reponse_executions[[1]])
sd (tps_reponse_executions[[1]])
quantile (tps_reponse_executions[[1]])
min (tps_reponse_executions[[1]])
max (tps_reponse_executions[[1]])
median (tps_reponse_executions[[1]])
quarters.POSIXt (tps_reponse_executions[[1]])
confint (tps_reponse_executions[[1]])
confint (tps_reponse_executions[[1]])
tps_reponse_executions[[1]]$conf.int
quantile (tps_reponse_executions[[1]])
x = quantile (tps_reponse_executions[[1]])
x
x[1]
names(x) = ""
x
quantile (tps_reponse_executions[[1]])
cat("execution borne_inferieure borne_superieure")
for(i in 1:5){
# cat ("moyenne = ")
# cat (moyennes[i])
# cat (", ecart = ")
# cat (1.96 * (sd(tps_reponse_executions[[i]])/sqrt(length(tps_reponse_executions[[i]]))))
# cat ("\n")
borne_inf = moyennes[i] - 1.96 * (sd(tps_reponse_executions[[i]])/sqrt(length(tps_reponse_executions[[i]])))
borne_sup = moyennes[i] + 1.96 * (sd(tps_reponse_executions[[i]])/sqrt(length(tps_reponse_executions[[i]])))
cat(i,borne_inf, borne_sup, sep = " ")
cat("\n")
}
quantile (tps_reponse_executions[[1]])
x = quantile (tps_reponse_executions[[1]])
plot (x)
plot (tps_reponse_executions[[1]])
plot (tps_reponse_executions[[1]], type "l")
plot (tps_reponse_executions[[1]], type "l")
plot (tps_reponse_executions[[1]], type = "l")
summary(data1)
data1 = read.table(file = "r1.txt")
data2 = read.table(file = "r2.txt")
summary(data1)
data1 = read.table(file = "r1.txt")
data2 = read.table(file = "r2.txt")
data3 = read.table(file = "r3.txt")
data4 = read.table(file = "r4.txt")
data5 = read.table(file = "r5.txt")
noms_variables = c( "dec. 16, 2016",
"interval",
"i/o rate",
"MB/sec",
"bytes i/o",
"read pct",
"resp time",
"read resp",
"write resp",
"resp max",
"resp stddev",
"queue depth",
"cpu%sys+u",
"cpu%sys")
summary(data1)
View(data1)
names(data1) = noms_variables
summary(data1)
source('~/CHPS/EDP/TDs_EDP/TD4/Visualisation/Question2/script_tps_reponse.R')
source('~/CHPS/EDP/TDs_EDP/TD4/Visualisation/Question2/script_tps_reponse.R')
source('~/CHPS/EDP/TDs_EDP/TD4/Visualisation/Question2/script_tps_reponse.R')
source('~/CHPS/EDP/TDs_EDP/TD4/Visualisation/Question2/script_tps_reponse.R')
summary(tps_reponse_executions[[1]])
data1 = read.table(file = "r1.txt")
data2 = read.table(file = "r2.txt")
data3 = read.table(file = "r3.txt")
data4 = read.table(file = "r4.txt")
data5 = read.table(file = "r5.txt")
noms_variables = c( "dec. 16, 2016",
"interval",
"i/o rate",
"MB/sec",
"bytes i/o",
"read pct",
"resp time",
"read resp",
"write resp",
"resp max",
"resp stddev",
"queue depth",
"cpu%sys+u",
"cpu%sys")
names(data1) = noms_variables
names(data2) = noms_variables
names(data3) = noms_variables
names(data4) = noms_variables
names(data5) = noms_variables
tps_reponse_executions = list(as.matrix(data1[,"resp time"]),
as.matrix(data2[,"resp time"]),
as.matrix(data3[,"resp time"]),
as.matrix(data4[,"resp time"]),
as.matrix(data5[,"resp time"]))
cat ("execution\tmoyenne_tps_reponse\n", file = "tps_resp_moyen.txt")
moyennes = seq (1:5)
for(i in 1:length(moyennes)){
moyennes[i] = mean (tps_reponse_executions[[i]])
cat (i, moyennes[i], file = "tps_resp_moyen.txt", sep = "\t", append=TRUE)
cat ("\n", file = "tps_resp_moyen.txt", append = TRUE)
}
variances = seq (1:5)
cat ("execution\tvariance_tps_reponse\n", file = "tps_resp_variance.txt")
for(i in 1:5){
variances[i] = var (tps_reponse_executions[[i]])
cat (i, variances[i], file = "tps_resp_variance.txt", sep = "\t", append=TRUE)
cat ("\n", file = "tps_resp_variance.txt", append = TRUE)
}
cat("execution\tborne_inferieure\tborne_superieure\n", file = "tps_resp_conf_int.txt")
for(i in 1:5){
borne_inf = moyennes[i] - 1.96 * (sd(tps_reponse_executions[[i]])/sqrt(length(tps_reponse_executions[[i]])))
borne_sup = moyennes[i] + 1.96 * (sd(tps_reponse_executions[[i]])/sqrt(length(tps_reponse_executions[[i]])))
cat(i,borne_inf, borne_sup, sep = "\t", file = "tps_resp_conf_int.txt",append=TRUE)
cat("\n", file = "tps_resp_conf_int.txt",append=TRUE)
}
cat("execution\tquantile\n", file = "tps_resp_quantile.txt")
for(i in 1:5){
quantile = quantile (tps_reponse_executions[[i]])
cat(i, quantile, sep = "\n", file = "tps_resp_quantile.txt",append=TRUE)
cat("\n", file = "tps_resp_quantile.txt",append=TRUE)
}
summary(tps_reponse_executions[[1]])
summary(data1)
quantile(tps_reponse_executions[[1]])
View(data1)
help (summary)
x = summary(data1)
w
x
res = summary(data1)
res[1]
res[2]
res[[1]]
borne_inf = borne_inf = seq (1:5)
for(i in 1:5){
borne_inf = moyennes[i] - 1.96 * (sd(tps_reponse_executions[[i]])/sqrt(length(tps_reponse_executions[[i]])))
borne_sup = moyennes[i] + 1.96 * (sd(tps_reponse_executions[[i]])/sqrt(length(tps_reponse_executions[[i]])))
cat(i,borne_inf, borne_sup, sep = "\t", file = "tps_resp_conf_int.txt",append=TRUE)
cat("\n", file = "tps_resp_conf_int.txt",append=TRUE)
}
for(i in 1:5){
borne_inf[i] = moyennes[i] - 1.96 * (sd(tps_reponse_executions[[i]])/sqrt(length(tps_reponse_executions[[i]])))
borne_sup[i] = moyennes[i] + 1.96 * (sd(tps_reponse_executions[[i]])/sqrt(length(tps_reponse_executions[[i]])))
cat(i,borne_inf, borne_sup, sep = "\t", file = "tps_resp_conf_int.txt",append=TRUE)
cat("\n", file = "tps_resp_conf_int.txt",append=TRUE)
}
source('~/CHPS/EDP/TDs_EDP/TD4/Visualisation/Question2/script_tps_reponse.R')
source('~/CHPS/EDP/TDs_EDP/TD4/Visualisation/Question2/script_tps_reponse.R')
source('~/CHPS/EDP/TDs_EDP/TD4/Visualisation/Question2/script_tps_reponse.R')
source('~/CHPS/EDP/TDs_EDP/TD4/Visualisation/Question2/script_tps_reponse.R')
source('~/CHPS/EDP/TDs_EDP/TD4/Visualisation/Question2/script_tps_reponse.R')
data1 = read.table(file = "r1.txt")
data2 = read.table(file = "r2.txt")
data3 = read.table(file = "r3.txt")
data4 = read.table(file = "r4.txt")
data5 = read.table(file = "r5.txt")
noms_variables = c( "dec. 16, 2016",
"interval",
"i/o rate",
"MB/sec",
"bytes i/o",
"read pct",
"resp time",
"read resp",
"write resp",
"resp max",
"resp stddev",
"queue depth",
"cpu%sys+u",
"cpu%sys")
names(data1) = noms_variables
names(data2) = noms_variables
names(data3) = noms_variables
names(data4) = noms_variables
names(data5) = noms_variables
tps_reponse_executions = list(as.matrix(data1[,"resp time"]),
as.matrix(data2[,"resp time"]),
as.matrix(data3[,"resp time"]),
as.matrix(data4[,"resp time"]),
as.matrix(data5[,"resp time"]))
moyennes = seq (1:5)
for(i in 1:length(moyennes)){
moyennes[i] = mean (tps_reponse_executions[[i]])
}
variances = seq (1:5)
for(i in 1:5){
variances[i] = var (tps_reponse_executions[[i]])
}
borne_inf = borne_inf = seq (1:5)
for(i in 1:5){
borne_inf[i] = moyennes[i] - 1.96 * (sd(tps_reponse_executions[[i]])/sqrt(length(tps_reponse_executions[[i]])))
borne_sup[i] = moyennes[i] + 1.96 * (sd(tps_reponse_executions[[i]])/sqrt(length(tps_reponse_executions[[i]])))
}
source('~/CHPS/EDP/TDs_EDP/TD4/Visualisation/Question2/script_tps_reponse.R')
